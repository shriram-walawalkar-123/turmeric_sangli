{"ast":null,"code":"import axios from 'axios';\n\n// Backend API base URL\nexport const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3000';\n\n// Create axios instance with default config\nconst apiClient = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  timeout: 10000\n});\n\n// Axios request interceptor to attach latest token\napiClient.interceptors.request.use(config => {\n  try {\n    // Always pick the latest stageToken first, fallback to adminToken\n    const stageToken = localStorage.getItem('stageToken');\n    const adminToken = localStorage.getItem('adminToken');\n    const token = stageToken || adminToken;\n    console.log('Sending token:', token);\n    if (token) {\n      // Preserve existing headers\n      config.headers = config.headers || {};\n      config.headers['Authorization'] = `Bearer ${token}`;\n    }\n  } catch (err) {\n    console.warn('Error reading token from localStorage:', err);\n  }\n  return config;\n}, error => Promise.reject(error));\n\n// API endpoints\nexport const API = {\n  // Harvest endpoints\n  addHarvest: data => apiClient.post('/api/harvest', data),\n  // Processing endpoints\n  addProcessing: data => apiClient.post('/api/processing', data),\n  // Distributor endpoints\n  addDistributor: data => apiClient.post('/api/distributor', data),\n  // Supplier endpoints\n  addSupplier: data => apiClient.post('/api/supplier', data),\n  // Shopkeeper endpoints\n  addShopkeeper: data => apiClient.post('/api/shopkeeper', data),\n  // Packet endpoints\n  addPacket: data => apiClient.post('/api/packet', data),\n  // Journey tracking\n  getJourney: packetId => apiClient.get(`/api/journey/${packetId}`),\n  // Dashboard stats\n  getStats: () => apiClient.get('/api/stats'),\n  // Recent activity\n  getRecentActivity: () => apiClient.get('/api/activity')\n};\nexport default apiClient;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","apiClient","create","baseURL","headers","timeout","interceptors","request","use","config","stageToken","localStorage","getItem","adminToken","token","console","log","err","warn","error","Promise","reject","API","addHarvest","data","post","addProcessing","addDistributor","addSupplier","addShopkeeper","addPacket","getJourney","packetId","get","getStats","getRecentActivity"],"sources":["C:/Users/swala/Desktop/turmeric_sangli/turmeric-frontend/src/config/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Backend API base URL\r\nexport const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3000';\r\n\r\n// Create axios instance with default config\r\nconst apiClient = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n  timeout: 10000,\r\n});\r\n\r\n// Axios request interceptor to attach latest token\r\napiClient.interceptors.request.use(\r\n  (config) => {\r\n    try {\r\n      // Always pick the latest stageToken first, fallback to adminToken\r\n      const stageToken = localStorage.getItem('stageToken');\r\n      const adminToken = localStorage.getItem('adminToken');\r\n      const token = stageToken || adminToken;\r\n      console.log('Sending token:', token);\r\n      if (token) {\r\n        // Preserve existing headers\r\n        config.headers = config.headers || {};\r\n        config.headers['Authorization'] = `Bearer ${token}`;\r\n      }\r\n    } catch (err) {\r\n      console.warn('Error reading token from localStorage:', err);\r\n    }\r\n\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\n\r\n// API endpoints\r\nexport const API = {\r\n  // Harvest endpoints\r\n  addHarvest: (data) => apiClient.post('/api/harvest', data),\r\n  \r\n  // Processing endpoints\r\n  addProcessing: (data) => apiClient.post('/api/processing', data),\r\n  \r\n  // Distributor endpoints\r\n  addDistributor: (data) => apiClient.post('/api/distributor', data),\r\n  \r\n  // Supplier endpoints\r\n  addSupplier: (data) => apiClient.post('/api/supplier', data),\r\n  \r\n  // Shopkeeper endpoints\r\n  addShopkeeper: (data) => apiClient.post('/api/shopkeeper', data),\r\n  \r\n  // Packet endpoints\r\n  addPacket: (data) => apiClient.post('/api/packet', data),\r\n  \r\n  // Journey tracking\r\n  getJourney: (packetId) => apiClient.get(`/api/journey/${packetId}`),\r\n  \r\n  // Dashboard stats\r\n  getStats: () => apiClient.get('/api/stats'),\r\n  \r\n  // Recent activity\r\n  getRecentActivity: () => apiClient.get('/api/activity'),\r\n};\r\n\r\nexport default apiClient;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,OAAO,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;;AAEpF;AACA,MAAMC,SAAS,GAAGL,KAAK,CAACM,MAAM,CAAC;EAC7BC,OAAO,EAAEN,YAAY;EACrBO,OAAO,EAAE;IACP,cAAc,EAAE;EAClB,CAAC;EACDC,OAAO,EAAE;AACX,CAAC,CAAC;;AAEF;AACAJ,SAAS,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CAC/BC,MAAM,IAAK;EACV,IAAI;IACF;IACA,MAAMC,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;IACrD,MAAMC,UAAU,GAAGF,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;IACrD,MAAME,KAAK,GAAGJ,UAAU,IAAIG,UAAU;IACtCE,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,KAAK,CAAC;IACpC,IAAIA,KAAK,EAAE;MACT;MACAL,MAAM,CAACL,OAAO,GAAGK,MAAM,CAACL,OAAO,IAAI,CAAC,CAAC;MACrCK,MAAM,CAACL,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUU,KAAK,EAAE;IACrD;EACF,CAAC,CAAC,OAAOG,GAAG,EAAE;IACZF,OAAO,CAACG,IAAI,CAAC,wCAAwC,EAAED,GAAG,CAAC;EAC7D;EAEA,OAAOR,MAAM;AACf,CAAC,EACAU,KAAK,IAAKC,OAAO,CAACC,MAAM,CAACF,KAAK,CACjC,CAAC;;AAGD;AACA,OAAO,MAAMG,GAAG,GAAG;EACjB;EACAC,UAAU,EAAGC,IAAI,IAAKvB,SAAS,CAACwB,IAAI,CAAC,cAAc,EAAED,IAAI,CAAC;EAE1D;EACAE,aAAa,EAAGF,IAAI,IAAKvB,SAAS,CAACwB,IAAI,CAAC,iBAAiB,EAAED,IAAI,CAAC;EAEhE;EACAG,cAAc,EAAGH,IAAI,IAAKvB,SAAS,CAACwB,IAAI,CAAC,kBAAkB,EAAED,IAAI,CAAC;EAElE;EACAI,WAAW,EAAGJ,IAAI,IAAKvB,SAAS,CAACwB,IAAI,CAAC,eAAe,EAAED,IAAI,CAAC;EAE5D;EACAK,aAAa,EAAGL,IAAI,IAAKvB,SAAS,CAACwB,IAAI,CAAC,iBAAiB,EAAED,IAAI,CAAC;EAEhE;EACAM,SAAS,EAAGN,IAAI,IAAKvB,SAAS,CAACwB,IAAI,CAAC,aAAa,EAAED,IAAI,CAAC;EAExD;EACAO,UAAU,EAAGC,QAAQ,IAAK/B,SAAS,CAACgC,GAAG,CAAC,gBAAgBD,QAAQ,EAAE,CAAC;EAEnE;EACAE,QAAQ,EAAEA,CAAA,KAAMjC,SAAS,CAACgC,GAAG,CAAC,YAAY,CAAC;EAE3C;EACAE,iBAAiB,EAAEA,CAAA,KAAMlC,SAAS,CAACgC,GAAG,CAAC,eAAe;AACxD,CAAC;AAED,eAAehC,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}