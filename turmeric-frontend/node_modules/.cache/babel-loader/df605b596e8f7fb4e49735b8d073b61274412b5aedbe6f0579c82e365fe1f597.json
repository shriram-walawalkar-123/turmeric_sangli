{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\swala\\\\Desktop\\\\turmeric_sangli\\\\turmeric-frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { API_BASE_URL } from '../config/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [admin, setAdmin] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  // Set up axios defaults\n  useEffect(() => {\n    const token = localStorage.getItem('adminToken');\n    if (token) {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    }\n    axios.defaults.baseURL = API_BASE_URL;\n  }, []);\n\n  // Check if admin is logged in on app start\n  useEffect(() => {\n    const checkAuth = async () => {\n      const token = localStorage.getItem('adminToken');\n      if (token) {\n        try {\n          const response = await axios.get('/api/auth/me');\n          setAdmin(response.data.admin);\n          setIsAuthenticated(true);\n        } catch (error) {\n          console.error('Auth check failed:', error);\n          localStorage.removeItem('adminToken');\n          delete axios.defaults.headers.common['Authorization'];\n        }\n      }\n      setIsLoading(false);\n    };\n    checkAuth();\n  }, []);\n  const login = async credentials => {\n    try {\n      const response = await axios.post('/api/auth/login', credentials);\n      const {\n        token,\n        admin: adminData\n      } = response.data;\n      localStorage.setItem('adminToken', token);\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      setAdmin(adminData);\n      setIsAuthenticated(true);\n      return response.data;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      throw new Error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed');\n    }\n  };\n  const register = async credentials => {\n    try {\n      const response = await axios.post('/api/auth/register', credentials);\n      const {\n        token,\n        admin: adminData\n      } = response.data;\n      localStorage.setItem('adminToken', token);\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      setAdmin(adminData);\n      setIsAuthenticated(true);\n      return response.data;\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      throw new Error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Registration failed');\n    }\n  };\n  const logout = async () => {\n    try {\n      await axios.post('/api/auth/logout');\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      localStorage.removeItem('adminToken');\n      delete axios.defaults.headers.common['Authorization'];\n      setAdmin(null);\n      setIsAuthenticated(false);\n    }\n  };\n  const value = {\n    admin,\n    isAuthenticated,\n    isLoading,\n    login,\n    register,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"F8D1ZAPfMnMJu1Y0KUab6j/2Wj0=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","API_BASE_URL","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","admin","setAdmin","isLoading","setIsLoading","isAuthenticated","setIsAuthenticated","token","localStorage","getItem","defaults","headers","common","baseURL","checkAuth","response","get","data","error","console","removeItem","login","credentials","post","adminData","setItem","_error$response","_error$response$data","message","register","_error$response2","_error$response2$data","logout","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/swala/Desktop/turmeric_sangli/turmeric-frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { API_BASE_URL } from '../config/api';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [admin, setAdmin] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  // Set up axios defaults\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('adminToken');\r\n    if (token) {\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n    }\r\n    axios.defaults.baseURL = API_BASE_URL;\r\n  }, []);\r\n\r\n  // Check if admin is logged in on app start\r\n  useEffect(() => {\r\n    const checkAuth = async () => {\r\n      const token = localStorage.getItem('adminToken');\r\n      if (token) {\r\n        try {\r\n          const response = await axios.get('/api/auth/me');\r\n          setAdmin(response.data.admin);\r\n          setIsAuthenticated(true);\r\n        } catch (error) {\r\n          console.error('Auth check failed:', error);\r\n          localStorage.removeItem('adminToken');\r\n          delete axios.defaults.headers.common['Authorization'];\r\n        }\r\n      }\r\n      setIsLoading(false);\r\n    };\r\n\r\n    checkAuth();\r\n  }, []);\r\n\r\n  const login = async (credentials) => {\r\n    try {\r\n      const response = await axios.post('/api/auth/login', credentials);\r\n      const { token, admin: adminData } = response.data;\r\n      \r\n      localStorage.setItem('adminToken', token);\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n      \r\n      setAdmin(adminData);\r\n      setIsAuthenticated(true);\r\n      \r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error(error.response?.data?.message || 'Login failed');\r\n    }\r\n  };\r\n\r\n  const register = async (credentials) => {\r\n    try {\r\n      const response = await axios.post('/api/auth/register', credentials);\r\n      const { token, admin: adminData } = response.data;\r\n      \r\n      localStorage.setItem('adminToken', token);\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n      \r\n      setAdmin(adminData);\r\n      setIsAuthenticated(true);\r\n      \r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error(error.response?.data?.message || 'Registration failed');\r\n    }\r\n  };\r\n\r\n  const logout = async () => {\r\n    try {\r\n      await axios.post('/api/auth/logout');\r\n    } catch (error) {\r\n      console.error('Logout error:', error);\r\n    } finally {\r\n      localStorage.removeItem('adminToken');\r\n      delete axios.defaults.headers.common['Authorization'];\r\n      setAdmin(null);\r\n      setIsAuthenticated(false);\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    admin,\r\n    isAuthenticated,\r\n    isLoading,\r\n    login,\r\n    register,\r\n    logout\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}